// source: sandbox_sales_v1.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.sandbox.sales.v1.CreateSaleOrderRequest', null, global);
goog.exportSymbol('proto.sandbox.sales.v1.CreateSaleOrderResponse', null, global);
goog.exportSymbol('proto.sandbox.sales.v1.GetSaleOrderRequest', null, global);
goog.exportSymbol('proto.sandbox.sales.v1.GetSaleOrderResponse', null, global);
goog.exportSymbol('proto.sandbox.sales.v1.GetSaleOrdersRequest', null, global);
goog.exportSymbol('proto.sandbox.sales.v1.GetSaleOrdersResponse', null, global);
goog.exportSymbol('proto.sandbox.sales.v1.Product', null, global);
goog.exportSymbol('proto.sandbox.sales.v1.SaleOrder', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sandbox.sales.v1.GetSaleOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sandbox.sales.v1.GetSaleOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sandbox.sales.v1.GetSaleOrderRequest.displayName = 'proto.sandbox.sales.v1.GetSaleOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sandbox.sales.v1.GetSaleOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sandbox.sales.v1.GetSaleOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sandbox.sales.v1.GetSaleOrderResponse.displayName = 'proto.sandbox.sales.v1.GetSaleOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sandbox.sales.v1.GetSaleOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sandbox.sales.v1.GetSaleOrdersRequest.displayName = 'proto.sandbox.sales.v1.GetSaleOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sandbox.sales.v1.GetSaleOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.sandbox.sales.v1.GetSaleOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sandbox.sales.v1.GetSaleOrdersResponse.displayName = 'proto.sandbox.sales.v1.GetSaleOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sandbox.sales.v1.CreateSaleOrderRequest.repeatedFields_, null);
};
goog.inherits(proto.sandbox.sales.v1.CreateSaleOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sandbox.sales.v1.CreateSaleOrderRequest.displayName = 'proto.sandbox.sales.v1.CreateSaleOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sandbox.sales.v1.CreateSaleOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sandbox.sales.v1.CreateSaleOrderResponse.displayName = 'proto.sandbox.sales.v1.CreateSaleOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sandbox.sales.v1.SaleOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sandbox.sales.v1.SaleOrder.repeatedFields_, null);
};
goog.inherits(proto.sandbox.sales.v1.SaleOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sandbox.sales.v1.SaleOrder.displayName = 'proto.sandbox.sales.v1.SaleOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sandbox.sales.v1.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sandbox.sales.v1.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sandbox.sales.v1.Product.displayName = 'proto.sandbox.sales.v1.Product';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sandbox.sales.v1.GetSaleOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sandbox.sales.v1.GetSaleOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sandbox.sales.v1.GetSaleOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.GetSaleOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sandbox.sales.v1.GetSaleOrderRequest}
 */
proto.sandbox.sales.v1.GetSaleOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sandbox.sales.v1.GetSaleOrderRequest;
  return proto.sandbox.sales.v1.GetSaleOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sandbox.sales.v1.GetSaleOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sandbox.sales.v1.GetSaleOrderRequest}
 */
proto.sandbox.sales.v1.GetSaleOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sandbox.sales.v1.GetSaleOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sandbox.sales.v1.GetSaleOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sandbox.sales.v1.GetSaleOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.GetSaleOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.sandbox.sales.v1.GetSaleOrderRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sandbox.sales.v1.GetSaleOrderRequest} returns this
 */
proto.sandbox.sales.v1.GetSaleOrderRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sandbox.sales.v1.GetSaleOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sandbox.sales.v1.GetSaleOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    saleOrder: (f = msg.getSaleOrder()) && proto.sandbox.sales.v1.SaleOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sandbox.sales.v1.GetSaleOrderResponse}
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sandbox.sales.v1.GetSaleOrderResponse;
  return proto.sandbox.sales.v1.GetSaleOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sandbox.sales.v1.GetSaleOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sandbox.sales.v1.GetSaleOrderResponse}
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sandbox.sales.v1.SaleOrder;
      reader.readMessage(value,proto.sandbox.sales.v1.SaleOrder.deserializeBinaryFromReader);
      msg.setSaleOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sandbox.sales.v1.GetSaleOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sandbox.sales.v1.GetSaleOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSaleOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sandbox.sales.v1.SaleOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional SaleOrder sale_order = 1;
 * @return {?proto.sandbox.sales.v1.SaleOrder}
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.prototype.getSaleOrder = function() {
  return /** @type{?proto.sandbox.sales.v1.SaleOrder} */ (
    jspb.Message.getWrapperField(this, proto.sandbox.sales.v1.SaleOrder, 1));
};


/**
 * @param {?proto.sandbox.sales.v1.SaleOrder|undefined} value
 * @return {!proto.sandbox.sales.v1.GetSaleOrderResponse} returns this
*/
proto.sandbox.sales.v1.GetSaleOrderResponse.prototype.setSaleOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sandbox.sales.v1.GetSaleOrderResponse} returns this
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.prototype.clearSaleOrder = function() {
  return this.setSaleOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sandbox.sales.v1.GetSaleOrderResponse.prototype.hasSaleOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sandbox.sales.v1.GetSaleOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sandbox.sales.v1.GetSaleOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sandbox.sales.v1.GetSaleOrdersRequest}
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sandbox.sales.v1.GetSaleOrdersRequest;
  return proto.sandbox.sales.v1.GetSaleOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sandbox.sales.v1.GetSaleOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sandbox.sales.v1.GetSaleOrdersRequest}
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sandbox.sales.v1.GetSaleOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sandbox.sales.v1.GetSaleOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sandbox.sales.v1.GetSaleOrdersRequest} returns this
 */
proto.sandbox.sales.v1.GetSaleOrdersRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sandbox.sales.v1.GetSaleOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sandbox.sales.v1.GetSaleOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    saleOrdersList: jspb.Message.toObjectList(msg.getSaleOrdersList(),
    proto.sandbox.sales.v1.SaleOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sandbox.sales.v1.GetSaleOrdersResponse}
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sandbox.sales.v1.GetSaleOrdersResponse;
  return proto.sandbox.sales.v1.GetSaleOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sandbox.sales.v1.GetSaleOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sandbox.sales.v1.GetSaleOrdersResponse}
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sandbox.sales.v1.SaleOrder;
      reader.readMessage(value,proto.sandbox.sales.v1.SaleOrder.deserializeBinaryFromReader);
      msg.addSaleOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sandbox.sales.v1.GetSaleOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sandbox.sales.v1.GetSaleOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSaleOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sandbox.sales.v1.SaleOrder.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SaleOrder sale_orders = 1;
 * @return {!Array<!proto.sandbox.sales.v1.SaleOrder>}
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.prototype.getSaleOrdersList = function() {
  return /** @type{!Array<!proto.sandbox.sales.v1.SaleOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sandbox.sales.v1.SaleOrder, 1));
};


/**
 * @param {!Array<!proto.sandbox.sales.v1.SaleOrder>} value
 * @return {!proto.sandbox.sales.v1.GetSaleOrdersResponse} returns this
*/
proto.sandbox.sales.v1.GetSaleOrdersResponse.prototype.setSaleOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sandbox.sales.v1.SaleOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sandbox.sales.v1.SaleOrder}
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.prototype.addSaleOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sandbox.sales.v1.SaleOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sandbox.sales.v1.GetSaleOrdersResponse} returns this
 */
proto.sandbox.sales.v1.GetSaleOrdersResponse.prototype.clearSaleOrdersList = function() {
  return this.setSaleOrdersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sandbox.sales.v1.CreateSaleOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sandbox.sales.v1.CreateSaleOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.sandbox.sales.v1.Product.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderRequest}
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sandbox.sales.v1.CreateSaleOrderRequest;
  return proto.sandbox.sales.v1.CreateSaleOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sandbox.sales.v1.CreateSaleOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderRequest}
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethod(value);
      break;
    case 3:
      var value = new proto.sandbox.sales.v1.Product;
      reader.readMessage(value,proto.sandbox.sales.v1.Product.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sandbox.sales.v1.CreateSaleOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sandbox.sales.v1.CreateSaleOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sandbox.sales.v1.Product.serializeBinaryToWriter
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderRequest} returns this
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payment_method = 2;
 * @return {string}
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.getPaymentMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderRequest} returns this
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Product products = 3;
 * @return {!Array<!proto.sandbox.sales.v1.Product>}
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.sandbox.sales.v1.Product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sandbox.sales.v1.Product, 3));
};


/**
 * @param {!Array<!proto.sandbox.sales.v1.Product>} value
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderRequest} returns this
*/
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sandbox.sales.v1.Product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sandbox.sales.v1.Product}
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sandbox.sales.v1.Product, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderRequest} returns this
 */
proto.sandbox.sales.v1.CreateSaleOrderRequest.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sandbox.sales.v1.CreateSaleOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sandbox.sales.v1.CreateSaleOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    saleOrder: (f = msg.getSaleOrder()) && proto.sandbox.sales.v1.SaleOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderResponse}
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sandbox.sales.v1.CreateSaleOrderResponse;
  return proto.sandbox.sales.v1.CreateSaleOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sandbox.sales.v1.CreateSaleOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderResponse}
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sandbox.sales.v1.SaleOrder;
      reader.readMessage(value,proto.sandbox.sales.v1.SaleOrder.deserializeBinaryFromReader);
      msg.setSaleOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sandbox.sales.v1.CreateSaleOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sandbox.sales.v1.CreateSaleOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSaleOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sandbox.sales.v1.SaleOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional SaleOrder sale_order = 1;
 * @return {?proto.sandbox.sales.v1.SaleOrder}
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.prototype.getSaleOrder = function() {
  return /** @type{?proto.sandbox.sales.v1.SaleOrder} */ (
    jspb.Message.getWrapperField(this, proto.sandbox.sales.v1.SaleOrder, 1));
};


/**
 * @param {?proto.sandbox.sales.v1.SaleOrder|undefined} value
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderResponse} returns this
*/
proto.sandbox.sales.v1.CreateSaleOrderResponse.prototype.setSaleOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sandbox.sales.v1.CreateSaleOrderResponse} returns this
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.prototype.clearSaleOrder = function() {
  return this.setSaleOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sandbox.sales.v1.CreateSaleOrderResponse.prototype.hasSaleOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sandbox.sales.v1.SaleOrder.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.sandbox.sales.v1.SaleOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sandbox.sales.v1.SaleOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.SaleOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderDate: (f = msg.getOrderDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.sandbox.sales.v1.Product.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sandbox.sales.v1.SaleOrder}
 */
proto.sandbox.sales.v1.SaleOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sandbox.sales.v1.SaleOrder;
  return proto.sandbox.sales.v1.SaleOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sandbox.sales.v1.SaleOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sandbox.sales.v1.SaleOrder}
 */
proto.sandbox.sales.v1.SaleOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethod(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOrderDate(value);
      break;
    case 5:
      var value = new proto.sandbox.sales.v1.Product;
      reader.readMessage(value,proto.sandbox.sales.v1.Product.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sandbox.sales.v1.SaleOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sandbox.sales.v1.SaleOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.SaleOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.sandbox.sales.v1.Product.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sandbox.sales.v1.SaleOrder} returns this
 */
proto.sandbox.sales.v1.SaleOrder.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sandbox.sales.v1.SaleOrder} returns this
 */
proto.sandbox.sales.v1.SaleOrder.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string payment_method = 3;
 * @return {string}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.getPaymentMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sandbox.sales.v1.SaleOrder} returns this
 */
proto.sandbox.sales.v1.SaleOrder.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp order_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.getOrderDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sandbox.sales.v1.SaleOrder} returns this
*/
proto.sandbox.sales.v1.SaleOrder.prototype.setOrderDate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sandbox.sales.v1.SaleOrder} returns this
 */
proto.sandbox.sales.v1.SaleOrder.prototype.clearOrderDate = function() {
  return this.setOrderDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.hasOrderDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Product products = 5;
 * @return {!Array<!proto.sandbox.sales.v1.Product>}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.sandbox.sales.v1.Product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sandbox.sales.v1.Product, 5));
};


/**
 * @param {!Array<!proto.sandbox.sales.v1.Product>} value
 * @return {!proto.sandbox.sales.v1.SaleOrder} returns this
*/
proto.sandbox.sales.v1.SaleOrder.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sandbox.sales.v1.Product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sandbox.sales.v1.Product}
 */
proto.sandbox.sales.v1.SaleOrder.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sandbox.sales.v1.Product, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sandbox.sales.v1.SaleOrder} returns this
 */
proto.sandbox.sales.v1.SaleOrder.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sandbox.sales.v1.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.sandbox.sales.v1.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sandbox.sales.v1.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sandbox.sales.v1.Product}
 */
proto.sandbox.sales.v1.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sandbox.sales.v1.Product;
  return proto.sandbox.sales.v1.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sandbox.sales.v1.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sandbox.sales.v1.Product}
 */
proto.sandbox.sales.v1.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sandbox.sales.v1.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sandbox.sales.v1.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sandbox.sales.v1.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sandbox.sales.v1.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.sandbox.sales.v1.Product.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sandbox.sales.v1.Product} returns this
 */
proto.sandbox.sales.v1.Product.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.sandbox.sales.v1.Product.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sandbox.sales.v1.Product} returns this
 */
proto.sandbox.sales.v1.Product.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.sandbox.sales.v1);
